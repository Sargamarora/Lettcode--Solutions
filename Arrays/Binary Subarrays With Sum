class Solution {
    public int numSubarraysWithSumBF(int[] nums, int goal) {
        int maxSubArray = 0;
        int n = nums.length;
        for( int i = 0 ; i<n ;i++){
            int sum = 0;
            for( int j = i ; j<n ;j++){
                sum+=nums[j];
                if(sum==goal) maxSubArray++;
                else if(sum>goal) break;
                 
            }
        }
        return maxSubArray;
        
    }
    public int numSubarraysWithSum(int[] nums, int goal){
        return atMostSum(nums,goal) - atMostSum(nums,goal-1);
    }
        public int atMostSum(int nums[] , int goal){
        int start = 0;
        int end = 0;
        int n = nums.length;
        int count = 0;
        int sum = 0;
        if (goal < 0) return 0; 
        while(end<n){
           sum+=nums[end];
            while(sum>goal){
                sum = sum - nums[start];
                start++;
            }
            count+=(end-start+1);
            end++;
        }
        return count;
     }
    
}
