// problem -- https://leetcode.com/problems/container-with-most-water/description/?envType=problem-list-v2&envId=array
// difficulty -- medium
// topic -- arrays
//BRUTE FORCE APPROACH -- TLE
class Solution {
    public int maxArea(int[] height) {
        int maxW = 0 ;
        for( int i = 0 ; i< height.length ;i++){
            for( int j = i+1; j< height.length ;j++){
                int h = Math.min(height[i],height[j]);
                int w = j-i;
                int area = h*w;
                maxW = Math.max(maxW,area);
            }
        }
        return maxW;
    }
}
        
      
        //TWO POINTER APPROACH 
class Solution {
    public int maxArea(int[] height) {
        int i = 0 ;
        int j = height.length-1;
        int maxW = 0 ;
        while(i<j){
            int h = Math.min(height[i],height[j]);
            int w = Math.abs(j-i);
            int area =h*w;
            maxW=Math.max(maxW,area);
            if(height[i]>height[j]){
                j--;
            }
            else {
                i++;
            }
          
            
        }
        return maxW;
        
    }
} 
