class Solution {
    public int characterReplacementBF(String s, int k) {
        
        char[] str = s.toCharArray();
        int maxfreq = 0;
        int maxlen = 0;
        for( int i = 0 ; i<str.length ;i++){
           int hash[] = new int[26];
           for( int j = i ; j< str.length ;j++){
            hash[str[j]-'A']++;
            maxfreq = Math.max(maxfreq,hash[str[j]-'A']);
            int changes = (j-i+1) - maxfreq;
            if(changes<=k){
              maxlen = Math.max(maxlen , j-i+1);
            }
            else {
                break;
            }
           }
        }
        return maxlen;
    }
    public int characterReplacement(String s, int k) {
        int maxfreq = 0 ;
        int maxlen = 0;
        int start = 0;
        int end ;
        Map<Character,Integer> map = new HashMap<>();
       for ( end = 0; end < s.length(); end++){

            map.put(s.charAt(end),map.getOrDefault(s.charAt(end),0)+1);
            maxfreq = Math.max(maxfreq,map.get(s.charAt(end)));

            while((end-start+1)-maxfreq>k){
                map.put(s.charAt(start),map.getOrDefault(s.charAt(start),0)-1);
                    start++;
                }
            
            
                maxlen = Math.max(maxlen,(end-start+1));
       }
        return maxlen;
    }
}
