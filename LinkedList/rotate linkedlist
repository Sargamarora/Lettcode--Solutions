// problem : rotate the linked list 
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || head.next==null) return head;
        ListNode temp = head;
        int count = 1 ;
        while(temp!=null && temp.next!=null){
            temp=temp.next;
            count++;
        }
        k=k%count;
        if (k == 0) return head;
        temp.next=head;
        ListNode curr = head;
        for( int i = 1 ; i < count-k ;i++){
            curr=curr.next;
        }
        head=curr.next;
        curr.next=null;
        return head;
       
        
    }
}
