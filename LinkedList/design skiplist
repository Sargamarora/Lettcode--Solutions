// problem : design skiplist
class Skiplist {
    private static final int Max_level=16;
    private Random random;
    private Node head;
    private int level;

    class Node {
        int val ;
        Node next[];
        Node( int val , int level){
            this.val = val;
            this.next=new Node[level+1];
        }
    }

    public Skiplist() {
        this.head= new Node(-1,Max_level);
        this.level=0;
        this.random=new Random(); 
    }
    
    public boolean search(int target) {
        Node curr = head;
        for( int i = level ; i>= 0 ;i--){
            while(curr.next[i]!=null && curr.next[i].val<target){
                curr=curr.next[i];
            }
        }
        curr=curr.next[0];

        return curr!=null && curr.val==target;
        
    }
    
    public void add(int num) {
        Node update[]= new Node [Max_level+1];
        Node curr = head;
        for( int i = level ; i>= 0 ;i--){
            while(curr.next[i]!=null && curr.next[i].val< num){
                curr=curr.next[i];
            }
            update[i]=curr;
        }
        int newlevel = randomlevel();
        if(newlevel>level){
            for( int i = level + 1; i<= newlevel ;i++){
                update[i]=head;
        }
        level = newlevel; 
    }
    Node newnode = new Node (num,newlevel);
    for( int i = 0 ; i<= newlevel ;i++){
        newnode.next[i]=update[i].next[i];
        update[i].next[i]=newnode;
    }
    }
    
    public boolean erase(int num) {
        Node update [] = new Node[Max_level+1];
        Node curr = head;
         for( int i = level ; i>= 0 ;i--){
            while(curr.next[i]!=null && curr.next[i].val<num){
                curr=curr.next[i];
            }
            update[i]=curr;
        }
        curr = curr.next[0];
        if(curr == null || curr.val!=num){
            return false;
        }
        for ( int i = 0 ; i <= level ;i++){
            if(update[i].next[i]!=curr){
                break;
            }
            update[i].next[i] = curr.next[i];
        }
        while(level>0 && head.next[level]==null){
            level--;
        }
        return true;
    }

    private int randomlevel(){
        int level = 0 ;
        while(level < Max_level && random.nextDouble()<0.5){
            level++;
        }
        return level;

    }
}

/**
 * Your Skiplist object will be instantiated and called as such:
 * Skiplist obj = new Skiplist();
 * boolean param_1 = obj.search(target);
 * obj.add(num);
 * boolean param_3 = obj.erase(num);
 */
