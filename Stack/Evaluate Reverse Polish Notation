// problem : Evaluate Reverse Polish Notation
class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
       
        for (String token : tokens) {
            if (!isOperator(token)) {
                stack.push(Integer.parseInt(token));
            } else {
                int top1 = stack.pop();
                int top2 = stack.pop();
                stack.push(operation(top2, top1, token));
            }
        }
        return stack.pop();  // Final result
    }

    public boolean isOperator(String op) {
        return op.equals("+") || op.equals("-") || op.equals("*") ||
               op.equals("/") || op.equals("%") || op.equals("^");
    }

    public int operation(int a, int b, String op) {
        switch (op) {
            case "+": return a + b;
            case "-": return a - b;
            case "*": return a * b;
            case "/": return a / b;
            case "%": return a % b;
            case "^": return (int)Math.pow(a, b);  // Optional: replace ^ with pow
            default: throw new IllegalArgumentException("Invalid operator: " + op);
        }
    }
}
