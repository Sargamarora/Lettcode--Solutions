Class MyCircularQueue {
    int arr[];
    int front ;
    int rear;
    int size;
    int count;

    public MyCircularQueue(int k) {
        arr= new int[k];
        size = k;
        front=0;
        rear=0;
        count=0;
    }
    
    public boolean enQueue(int value) {
        if(isFull()) return false;
        arr[rear]=value;
        rear = (rear+1)%size;
        count++;
        return true;
    }
    
    public boolean deQueue() {
        if(isEmpty()) return false;
        front = ( front+1)%size;
        count--;
        return true;
        
    }
    
    public int Front() {
        if(isEmpty()) return -1;
        return arr[front];
        
    }
    
    public int Rear() {
        if(isEmpty()) return -1;
        return arr[(rear-1+size)%size];
        
    }
    
    public boolean isEmpty() {
        return count==0?true:false;
        
    }
    
    public boolean isFull() {
    return size==count?true:false;
        
    }
}
